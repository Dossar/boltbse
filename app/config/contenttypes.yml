# This file defines the contenttypes on the website. See the documentation for
# details: http://docs.bolt.cm/content#defining-contenttypes

# The 'sort' is set to '-datepublish', which means that newer entries will be
# shown above older entries.
article:
    name: Articles
    singular_name: Article
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        body:
            type: html
            height: 300px
    record_template: article.twig
    listing_template: articles.twig
    recordsperpage: 5
    default_status: publish
    sort: -datepublish
    
# Batches represent a collection of songs.
batches:
    name: Batches
    singular_name: Batch
    fields:
        title:
            type: text
            label: Batch Name
            postfix: e.g. Official Tournament, November 2015
        description:
            type: html
            label: Batch Description
            info: Give information on what this batch is for.
            postfix: e.g. File Submissions from November 1st to December 31st 2015
        slug:
            type: slug
        batchtype:
            type: select
            values: [ Regular, Special ]
            label: Batch Type
        batchstatus:
            type: select
            values: [ Open, Closed ]
            info: If the Batch is Closed, it is no longer accepting submissions.
            label: Batch Status
        batchjudgments:
            type: select
            values: [ None, Partial, Done ]
            label: Batch Judgments
    record_template: batch.twig
    listing_template: batches.twig
    default_status: publish
    sort: -datepublish
    
# Song content type. Every Song is to be attached to a Batch.
songs:
    name: Songs
    singular_name: Song
    fields:
    
        # Song Information
        title:
            type: text
            label: Song Title
            group: content
        slug:
            type: slug
            info: The slug is to be /song/song-{id}
            postfix: e.g. /song/song-327 if song id in URL is 327
        artist:
            type: text
            label: Song Artist
            group: content
        stepartist:
            type: text
            label: Step Artist
            group: content
        transfer:
            type: text
            label: Transferred File
            info: Leave this field blank if the file is not a transfer.
            postfix: e.g. Yes, transferred from July 2015
            group: content
        filecomments:
            type: html
            label: File Comments
            group: content
            info: Any other information that would be useful for the GM Team.
            postfix: e.g. Updated File Submission on 1/1/2016, 5:00 PM EST. Fixed a pattern 90 seconds in.
            
        # Permission Details
        permission:
            type: select
            autocomplete: true
            values: [ "Blanket", "Conditional", "Uncertain", "Rejected" ]
            info: Only use Rejected if the artist requested royalties or said no. Otherwise, list it as Uncertain.
            label: Permission Status
            group: permission
        permissiondetails:
            type: html
            label: Permission Details
            info: Provide more details about the permission status of the song here.
            postfix: e.g. Dossar replied with the following email stating under certain conditions we can use his music.
            group: permission
        permissionimage:
            type: text
            label: Permission Image Link
            info: Please provide a link to the image if you can. The original permission email content is good, but an image is always good to have.
            group: permission
            
    # Other configurations
    relations:
        batches:
            type: select
            autocomplete: true
            multiple: false
            order: title
            label: Select Batch for this Song
    record_template: song.twig
    listing_template: songs.twig
    default_status: publish
    sort: -datepublish
    
# Review content type is related to a song.
reviews:
    name: Reviews
    singular_name: Review
    fields:
    
        # Review Judge Information
        title:
            type: text
            label: Review Title
            group: labeling
            postfix: e.g. November 2014 Set 1 - lapis
        slug:
            type: slug
            info: The slug is to be /review/review-{id}
            postfix: e.g. /review/review-327 if song id in URL is 327
            
        # Judging Related Fields
        judgelead:
            type: text
            label: Lead Judge
            group: judging
        judgereviewer:
            type: text
            label: Reviewer Judge
            group: judging
        judgenotes:
            type: html
            label: Judge Notes
            info: Enter the review for the file here. HTML formatting is allowed.
            group: judging
        judgerating:
            type: float
            label: Final Judge Rating
            group: judging
        judgestatus:
            type: select
            autocomplete: true
            label: Judging Status
            values: [ "Released", "Accepted", "Pending Fixes", "Conditional Queue", "Resubmission", "Rejected", "Judged", "Unjudged", "Disabled" ]
            info: Disabled means that the file is removed due to permission issues, temporarily or permanently. See permission section.
            group: judging
        sap:
            type: integer
            label: SAP
            info: Simfile Artist Points gained (or pending to gain) from this file submission.

    # Other configurations
    relations:
        songs:
            type: select
            autocomplete: true
            multiple: false
            order: title
            label: Select Batch for this Song
    record_template: song.twig
    listing_template: songs.twig
    default_status: publish
    sort: -datepublish

# Using YAML repeated nodes
#
# YAML allows the defining of "repeated nodes". These allow you to define a 'node'
# with a 'key: &name' and referenced later with '<<: *name'
#
# Bolt allows you to define this with the special entry of '__nodes:' that itself 
# won't create a Contenttype, but will allow you to use it in actual contenttypes
# to prevent repeating yourself.
#
# To achieve this, first create a key '__nodes:' 
#__nodes:
#    field_defaults: &field_defaults
#        title:
#            type: text
#            class: large
#            group: main
#        slug:
#            type: slug
#            uses: title
#    template_defaults: &template_defaults
#        template:
#            type: templateselect
#            filter: '*.twig'
#            group: meta
#
# Then, as an example, you could create a Contenttype with default fields, with 
# an additional 'image' field.
#
#contenttype_abc:
#    name: Contenttype Abc
#    fields:
#        <<: *field_defaults
#        image:
#            type: image
#            attrib: title
#            extensions: [ gif, jpg, png ]
#        <<: *template_defaults
#    taxonomy: [ chapters ]
#    recordsperpage: 10
#
# Alternatively, or additionally, you then can thencreate a Contenttype with 
# default fields, and a 'select' field, and a different 'templateselect' option.
#
#contenttype_xyz:
#    name: Contenttype Xyz
#    fields:
#        <<: *field_defaults
#        selectfield:
#            type: select
#            values: [ none, foo, bar ]
#        template:
#            type: templateselect
#            filter: '*_xyz.twig'
#    taxonomy: [ tags ]
#    recordsperpage: 20

# Possible field types:
#
# text - varchar(256) - input type text.
# integer - integer - Input field for integer numbers.
# float - double - Input field for floating numbers, stored as 'Double'.
# geolocation - text (65kb) - Input field for geolocation. Enter an address, and the location is geocoded to latitude/longitude coordinates
# imagelist - text (65kb) - Input type for imagelists. Add multiple images with a description. Useful for image sliders, galleries, etcetera.
# image - varchar(256) - image select/upload widget, stored as filename.
# file - varchar(256) - file select/upload widget, stored as filename.
# filelist - text (65kb) - Input type for a list of files. Including a description.
# video - varchar(256) - Video embed widget, stored as filename.
# html - text (65kb) - wysiwyg element.
# textarea - varchar(32768) - Simple, plain < textarea > field.
# markdown - varchar(32768) - Simple, plain < textarea > field, which is parsed as Markdown text.
# datetime - datetime - date and time selector widget.
# date - datetime - date selector widget.
# select - varchar(256) - select with predefined values
# templateselect - varchar(256) - select with template filenames
# checkbox - integer - checkbox-field which is 1 (checked) or 0 (unchecked)

# number (deprecated) - input type decimal(18,9), useful for storing number that need to be sortable
